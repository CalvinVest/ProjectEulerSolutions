package projecteulersolutions;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

/*
Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:
2^2 = 4     2^3 = 8     2^4 = 16    2^5 = 32
3^2 = 9     3^3 = 27    3^4 = 81    3^5 = 243
4^2 = 16    4^3 = 64    4^4 = 256   4^5 = 1024
5^2 = 25    5^3 = 125   5^4 = 625   5^5 = 3125

If they are placed in numerical order with repeats removed, we get the following
sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 <= a, b <= 100?
*/
public class Problem0029 extends Problem {
    
    @Override
    public boolean isSolved() {
        return false;
    }
    
    @Override
    public void printSolution() {
        // list to store all distinct values of a^b
        List<String> list = new ArrayList<>();
        
        // for 2 <= a,b <= 100
        for(int a = 2; a <= 100; a++) {
            for(int b = 2; b <= 100; b++) {
                // get a^b
                BigInteger curr = EulerMath.getBigIntPow(a, b);
                // if a^b is not in the list, add it
                if(!list.contains(curr.toString())) {
                    list.add(curr.toString());
                }
            }
        }
        
        // uses size of a^b list for count
        System.out.println("The number of distinct values of a^b for "
        + "|a| < 100 and |b| <= 100 is " + list.size());
    }
}
