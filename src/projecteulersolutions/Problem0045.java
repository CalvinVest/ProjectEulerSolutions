package projecteulersolutions;

/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle Tn = n(n+1)/2      1, 3, 6, 10, 15, ...
Pentagonal Pn = n(3n-1)/2   1, 5, 12, 22, 35, ...
Hexagonal Hn = n(2n-1)      1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal
 */
public class Problem0045 extends Problem {

    @Override
    public boolean isSolved() {
        return false;
    }

    @Override
    public void printSolution() {
        System.out.println(calcTriPentaHexaNum() + " is triangular, pentagonal, and hexagonal.");
    }
    
    private long calcTriPentaHexaNum() {
        boolean isFound = false;
        // since the given example is T285 = 40755 we start at triIndex 286.
        int triIndex = 286;
        
        while(!isFound) {
            long triNum = triangle(triIndex);
            if(isPentagonal(triNum) && isHexagonal(triNum)) {
                return triNum;
            }
            triIndex++;
        }
        return 0;
    }
    
    private boolean isPentagonal(long n) {
        for(int i = 0; pentagon(i) <= n; i++) {
            if(pentagon(i) == n) {
                return true;
            }
        }
        return false;
    }
    
    private boolean isHexagonal(long n) {
        for(int i = 0; hexagon(i) <= n; i++) {
            if(hexagon(i) == n) {
                return true;
            }
        }
        return false;
    }

    private long triangle(int n) {
        return (long) n * (n + 1) / 2;
    }

    private long pentagon(int n) {
        return (long) n * (3 * n - 1) / 2;
    }

    private long hexagon(int n) {
        return (long) n * (2 * n - 1);
    }
}
